{"version":3,"file":"index.umd.js","sources":["../src/index.ts","../src/parseProxyOps.ts"],"sourcesContent":["import { proxy, subscribe } from 'valtio/vanilla';\nimport * as Y from 'yjs';\nimport deepEqual from 'fast-deep-equal';\nimport { parseProxyOps } from './parseProxyOps';\n\nconst isObject = (x: unknown): x is Record<string, unknown> =>\n  typeof x === 'object' && x !== null;\n\nconst isPrimitiveMapValue = (v: unknown) =>\n  v === null ||\n  typeof v === 'string' ||\n  typeof v === 'number' ||\n  typeof v === 'boolean';\n\nconst isPrimitiveArrayValue = (v: unknown) =>\n  typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\n\ntype Options = {\n  transactionOrigin?: any;\n};\n\nconst transact = (doc: Y.Doc | null, opts: Options, fn: () => void) => {\n  if (doc) {\n    doc.transact(fn, opts.transactionOrigin);\n  } else {\n    fn();\n  }\n};\n\nexport const bindProxyAndYMap = <T>(\n  p: Record<string, T>,\n  y: Y.Map<T>,\n  opts: Options = {},\n) => {\n  const pv2yvCache = new WeakMap<object, unknown>();\n\n  const setPValueToY = (pv: T, k: string) => {\n    transact(y.doc, opts, () => {\n      if (\n        isObject(pv) &&\n        pv2yvCache.has(pv) &&\n        pv2yvCache.get(pv) === y.get(k)\n      ) {\n        return;\n      }\n      if (Array.isArray(pv)) {\n        const yv = new Y.Array();\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYArray(pv, yv, opts);\n        y.set(k, yv as unknown as T);\n      } else if (isObject(pv)) {\n        const yv = new Y.Map();\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYMap(pv, yv, opts);\n        y.set(k, yv as unknown as T);\n      } else if (isPrimitiveMapValue(pv)) {\n        y.set(k, pv);\n      } else {\n        throw new Error('unsupported p type');\n      }\n    });\n  };\n\n  const setYValueToP = (yv: T, k: string) => {\n    const prev = p[k];\n    if (isObject(prev) && pv2yvCache.get(prev) === yv) {\n      return;\n    }\n    if (yv instanceof Y.Array) {\n      const pv = proxy([]);\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n      p[k] = pv as unknown as T;\n    } else if (yv instanceof Y.Map) {\n      const pv = proxy(yv.toJSON());\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n      p[k] = pv as unknown as T;\n    } else if (isPrimitiveMapValue(yv)) {\n      p[k] = yv;\n    } else {\n      throw new Error('unsupported y type');\n    }\n  };\n\n  // initialize from p\n  Object.entries(p).forEach(([k, pv]) => {\n    const yv = y.get(k);\n    if (\n      Array.isArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n    } else if (\n      !Array.isArray(pv) &&\n      isObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n    } else {\n      setPValueToY(pv, k);\n    }\n  });\n\n  // initialize from y\n  y.forEach((yv, k) => {\n    const pv = p[k];\n    if (\n      Array.isArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n    } else if (\n      !Array.isArray(pv) &&\n      isObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n    } else {\n      setYValueToP(yv, k);\n    }\n  });\n\n  // subscribe p\n  subscribe(p, (ops) => {\n    ops.forEach((op) => {\n      const path = op[1];\n      if (path.length !== 1) {\n        return;\n      }\n      const k = path[0] as string;\n      if (op[0] === 'delete') {\n        y.delete(k);\n      } else if (op[0] === 'set') {\n        const pv = p[k];\n        const yv = y.get(k);\n        if (!deepEqual(yv instanceof Y.AbstractType ? yv.toJSON() : yv, pv)) {\n          setPValueToY(pv, k);\n        }\n      }\n    });\n  });\n\n  // subscribe y\n  y.observe((event) => {\n    event.keysChanged.forEach((k) => {\n      const yv = y.get(k);\n      if (yv === undefined) {\n        delete p[k];\n      } else {\n        setYValueToP(yv, k);\n      }\n    });\n  });\n};\n\nexport const bindProxyAndYArray = <T>(\n  p: T[],\n  y: Y.Array<T>,\n  opts: Options = {},\n) => {\n  const pv2yvCache = new WeakMap<object, unknown>();\n\n  const insertPValueToY = (pv: T, i: number) => {\n    if (Array.isArray(pv)) {\n      const yv = new Y.Array();\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n      y.insert(i, [yv as unknown as T]);\n    } else if (isObject(pv)) {\n      const yv = new Y.Map();\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n      y.insert(i, [yv as unknown as T]);\n    } else if (isPrimitiveArrayValue(pv)) {\n      y.insert(i, [pv]);\n    } else {\n      throw new Error('unsupported p type');\n    }\n  };\n\n  const insertYValueToP = (yv: T, i: number) => {\n    if (yv instanceof Y.Array) {\n      const pv = proxy([]);\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n      p.splice(i, 0, pv as unknown as T);\n    } else if (yv instanceof Y.Map) {\n      const pv = proxy(yv.toJSON());\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv);\n      p.splice(i, 0, pv as unknown as T);\n    } else if (isPrimitiveArrayValue(yv)) {\n      p.splice(i, 0, yv);\n    } else {\n      throw new Error('unsupported y type');\n    }\n  };\n\n  // initialize from p\n  p.forEach((pv, i) => {\n    const yv = y.get(i);\n    if (\n      Array.isArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYArray(pv, yv, opts);\n      }\n    } else if (\n      !Array.isArray(pv) &&\n      isObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYMap(pv, yv, opts);\n      }\n    } else if (\n      isPrimitiveArrayValue(pv) &&\n      isPrimitiveArrayValue(yv) &&\n      pv === yv\n    ) {\n      // do nothing\n    } else {\n      insertPValueToY(pv, i);\n    }\n  });\n\n  // initialize from y\n  y.forEach((yv, i) => {\n    const pv = p[i];\n    if (\n      Array.isArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYArray(pv, yv, opts);\n      }\n    } else if (\n      !Array.isArray(pv) &&\n      isObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYMap(pv, yv, opts);\n      }\n    } else if (\n      isPrimitiveArrayValue(pv) &&\n      isPrimitiveArrayValue(yv) &&\n      pv === yv\n    ) {\n      // do nothing\n    } else {\n      insertYValueToP(yv, i);\n    }\n  });\n\n  // strip p\n  p.splice(y.length);\n\n  // subscribe p\n  subscribe(p, (ops) => {\n    const arrayOps = parseProxyOps(ops);\n    if (deepEqual(y.toJSON(), p)) {\n      return;\n    }\n    transact(y.doc, opts, () => {\n      arrayOps.forEach((op) => {\n        const i = op[1];\n        if (op[0] === 'delete') {\n          if (y.length > i) {\n            y.delete(i, 1);\n          }\n          return;\n        }\n        const pv = p[i];\n        if (pv === undefined) {\n          return;\n        }\n        if (op[0] === 'set') {\n          if (y.length > i) {\n            y.delete(i, 1);\n          }\n          insertPValueToY(pv, i);\n        } else if (op[0] === 'insert') {\n          insertPValueToY(pv, i);\n        }\n      });\n    });\n  });\n\n  // subscribe y\n  y.observe((event) => {\n    if (deepEqual(p, y.toJSON())) {\n      return;\n    }\n    let retain = 0;\n    event.changes.delta.forEach((item) => {\n      if (item.retain) {\n        retain += item.retain;\n      }\n      if (item.delete) {\n        p.splice(retain, item.delete);\n      }\n      if (item.insert) {\n        if (Array.isArray(item.insert)) {\n          item.insert.forEach((yv, i) => {\n            insertYValueToP(yv, retain + i);\n          });\n        } else {\n          insertYValueToP(item.insert as unknown as T, retain);\n        }\n        retain += item.insert.length;\n      }\n    });\n  });\n};\n","import { subscribe } from 'valtio/vanilla';\n\ntype Op = Parameters<Parameters<typeof subscribe>[1]>[0][number];\ntype ArrayOp = [\n  op: 'insert' | 'set' | 'delete',\n  index: number,\n  value1: unknown,\n  value2: unknown,\n];\n\nexport const parseProxyOps = (ops: Op[]): ArrayOp[] => {\n  const arrayOps: ArrayOp[] = ops.flatMap((op) => {\n    if (op[0] === 'resolve' || op[0] === 'reject') return [];\n    if (op[1].length !== 1) return [];\n    const index = Number(op[1][0]);\n    if (!Number.isFinite(index)) return [];\n    return [[op[0], index, op[2], op[3]]];\n  });\n\n  const findCorrespondingInsert = (\n    startOpIndex: number,\n    startArrayIndex: number,\n  ) => {\n    let s = 0;\n    let noInsert: [startOpIndex: number, startArrayIndex: number] | null = null;\n    while (startOpIndex + s + 1 < arrayOps.length) {\n      if (\n        (arrayOps[startOpIndex + s + 1][0] === 'set' ||\n          arrayOps[startOpIndex + s + 1][0] === 'insert') &&\n        arrayOps[startOpIndex + s + 1][1] < startArrayIndex &&\n        arrayOps[startOpIndex + s + 1][3] === arrayOps[startOpIndex][2]\n      ) {\n        return s + 1;\n      }\n      if (\n        noInsert === null &&\n        (arrayOps[startOpIndex + s + 1][0] === 'set' ||\n          arrayOps[startOpIndex + s + 1][0] === 'insert') &&\n        arrayOps[startOpIndex + s + 1][1] === startArrayIndex - (s + 1) &&\n        arrayOps[startOpIndex + s + 1][3] === undefined\n      ) {\n        s += 1;\n      } else if (\n        noInsert === null &&\n        startOpIndex + s + 1 < arrayOps.length &&\n        arrayOps[startOpIndex + s + 1][0] === 'set' &&\n        arrayOps[startOpIndex + s + 1][3] !== undefined\n      ) {\n        noInsert = [startOpIndex + s + 1, arrayOps[startOpIndex + s + 1][1]];\n        s += 1;\n      } else if (\n        noInsert !== null &&\n        arrayOps[startOpIndex + s + 1][0] === 'set' &&\n        arrayOps[startOpIndex + s + 1][1] ===\n          noInsert[1] + (s + 1 - noInsert[0]) &&\n        arrayOps[startOpIndex + s + 1][3] !== undefined\n      ) {\n        s += 1;\n      } else {\n        return null;\n      }\n    }\n    return null;\n  };\n\n  const findContinuousDelete = (\n    startOpIndex: number,\n    startArrayIndex: number,\n  ) => {\n    let d = 0;\n    while (\n      startOpIndex + d + 1 < arrayOps.length &&\n      arrayOps[startOpIndex + d + 1][0] === 'delete' &&\n      arrayOps[startOpIndex + d + 1][1] === startArrayIndex - (d + 1)\n    ) {\n      d += 1;\n    }\n    return d;\n  };\n\n  let i = 0;\n  while (i < arrayOps.length) {\n    if (\n      (arrayOps[i][0] === 'set' || arrayOps[i][0] === 'insert') &&\n      arrayOps[i][3] === undefined\n    ) {\n      const startArrayIndex = arrayOps[i][1];\n      const s = findCorrespondingInsert(i, startArrayIndex);\n      if (s !== null) {\n        const newArrayOp: ArrayOp = [\n          'insert',\n          arrayOps[i + s][1],\n          arrayOps[i + s][2],\n          undefined,\n        ];\n        arrayOps.splice(i + s, 1, newArrayOp);\n        arrayOps.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    } else if (i > 0 && arrayOps[i][0] === 'delete') {\n      const startArrayIndex = arrayOps[i][1];\n      const d = findContinuousDelete(i, startArrayIndex);\n      if (\n        arrayOps[i - 1][0] === 'set' &&\n        arrayOps[i - 1][1] === startArrayIndex - (d + 1) &&\n        arrayOps[i - 1][2] === arrayOps[i][2]\n      ) {\n        const newArrayOp: ArrayOp = [\n          'delete',\n          startArrayIndex - (d + 1),\n          arrayOps[i - 1][3],\n          undefined,\n        ];\n        arrayOps.splice(i - 1, 2);\n        arrayOps.splice(i - 1 + d, 0, newArrayOp);\n        i -= 1;\n      } else {\n        i += 1;\n      }\n    } else {\n      i += 1;\n    }\n  }\n\n  return arrayOps;\n};\n"],"names":["isObject","x","isPrimitiveMapValue","v","isPrimitiveArrayValue","transact","doc","opts","fn","transactionOrigin","bindProxyAndYMap","p","y","pv2yvCache","WeakMap","setPValueToY","pv","k","has","get","Array","isArray","yv","Y","set","bindProxyAndYArray","Map","Error","setYValueToP","prev","proxy","toJSON","Object","entries","forEach","deepEqual","subscribe","ops","op","path","length","AbstractType","observe","event","keysChanged","undefined","insertPValueToY","i","insert","insertYValueToP","splice","arrayOps","flatMap","index","Number","isFinite","findCorrespondingInsert","startOpIndex","startArrayIndex","s","noInsert","findContinuousDelete","d","newArrayOp","parseProxyOps","retain","changes","delta","item"],"mappings":"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"}